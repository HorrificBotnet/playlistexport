PlaylistExport is a project designed to transfer .m3u playlists while maintaining the hierarchy
found in the file system directories. It can also autogenerate a playlist based on the rating
found in a gmusicbrowser configuration file for automatic exporting. It's mostly meant as a
personal project so if things are kinda wonky and backwards sorry. 

NO WARRANTY! BACK UP EVERYTHING ALWAYS!

Contact: putzpie@gmail.com

Install:
Run "python3 setup.py install" in the directory where the setup.py file is located.

Alternatively you can just run the script by itself with "python3 playlistexport.py" just fine.

Usage: [var=/your/path/here ...] /play/list1.m3u /play/list2.m3u ...

Playlists are automatically recognized and added to the queue. All variables can be passed
by the commandline, however I would recommend running playlistexport with the -d flag to set up
your default settings so that you don't have to add them all manually. Running playlistexport 
without any options will default to interactive mode.

Flags:
-h - display the help information and exit
-v - run in verbose mode
-a - autogenerate a playlist from music player settings (gmusicbrowser)
-d - launch prompt to set default settings and exit

Variables:
dst= - destination for copying playlist files to
lib= - path to music library (of the files in destination playlist)
gen_lib= - path to music player library settings (gmusicbrowser only)
gen_dst= - destination for output of autogenerated playlist
r= - rating cutoff, songs < than rating do not get autogenerated

Accepted File Types: .m3u, .m3u8

Note: order of arguments does not matter.

Known Bugs: Cannot drag and drop playlists with a ' in the file path in interactive mode.
